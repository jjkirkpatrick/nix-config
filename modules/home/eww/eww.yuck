;; Left side bar configuration
(defwindow bar
  :monitor 1
  :geometry (geometry
    :x "0"
    :y "0"
    :width "60"
    :height "92%"
    :anchor "left center")
  :stacking "bottom"
  :exclusive true
  :focusable false
  :reserve (struts :distance "70px" :side "left")
  (sidebar))

;; Top bar configuration
(defwindow top-bar
  :monitor 1
  :geometry (geometry
    :x "0"
    :y "0"
    :width "100%"
    :height "40"
    :anchor "top left")
  :stacking "bottom"
  :exclusive true
  :focusable false
  :reserve (struts :distance "40px" :side "top")
  (top-bar-widget))

;; Bottom bar configuration
(defwindow bottom-bar
  :monitor 1
  :geometry (geometry
    :x "0"
    :y "0"
    :width "100%"
    :height "40"
    :anchor "bottom left")
  :stacking "bottom"
  :exclusive true
  :focusable false
  :reserve (struts :distance "40px" :side "bottom")
  (bottom-bar-widget))

;; Main sidebar widget
(defwidget sidebar []
  (box
    :orientation "v"
    :class "sidebar"
    :space-evenly false
    :spacing 8
    (box :class "top-section" :orientation "v" :space-evenly false
      (workspaces)
      (window-title))
    (box :class "center-section" :orientation "v" :space-evenly false :spacing 8
      (time-widget)
      (system-info))
    (box :class "bottom-section" :orientation "v" :space-evenly false
      (network-widget)
      (power-menu))))

;; Top bar widget
(defwidget top-bar-widget []
  (box
    :orientation "h"
    :class "top-bar"
    :space-evenly false
    :spacing 8
    ;; Empty for now
    ""))

;; Bottom bar widget
(defwidget bottom-bar-widget []
  (box
    :orientation "h"
    :class "bottom-bar"
    :space-evenly false
    :spacing 8
    ;; Empty for now
    ""))

;; Workspaces widget
(defwidget workspaces []
  (box
    :class "workspaces"
    :orientation "v"
    :space-evenly false
    :spacing 4
    (for workspace in workspaces-data
      (button
        :class "workspace ${workspace.active ? "active" : ""} ${workspace.urgent ? "urgent" : ""}"
        :onclick "hyprctl dispatch workspace ${workspace.id}"
        :tooltip "Workspace ${workspace.id}"
        "${workspace.icon}"))))

;; Window title widget
(defwidget window-title []
  (box
    :class "window-title"
    :visible {window-title != ""}
    (label
      :class "window-title-text"
      :text {window-title}
      :limit-width 8
      :tooltip {window-title})))

;; Network widget
(defwidget network-widget []
  (box
    :class "network"
    (button
      :onclick "nm-connection-editor"
      :tooltip "Network: ${network-status}"
      (label :text {network-icon}))))

;; Time widget
(defwidget time-widget []
  (box
    :class "time-widget"
    :orientation "v"
    :space-evenly false
    (label :class "time" :text time)
    (label :class "date" :text date)))

;; System info widget
(defwidget system-info []
  (box
    :class "system-info"
    :orientation "v"
    :space-evenly false
    :spacing 5
    (circular-progress
      :value cpu-usage
      :class "cpu-progress"
      :thickness 4
      :start-at 75
      :clockwise true
      (label :text "󰍛" :class "cpu-icon"))
    (circular-progress
      :value ram-usage
      :class "ram-progress"
      :thickness 4
      :start-at 75
      :clockwise true
      (label :text "" :class "ram-icon"))
    (box :class "volume-control" :orientation "h"
      (button
        :onclick "pamixer --toggle-mute"
        :class "volume-button"
        (label :text {volume-icon})))))

;; Power menu widget
(defwidget power-menu []
  (box
    :class "power-menu"
    :orientation "v"
    :space-evenly false
    :spacing 5
    (button
      :onclick "eww update power-menu-open=${!power-menu-open}"
      :class "power-toggle"
      :tooltip "Power Menu"
      "⏻")
    (revealer
      :reveal power-menu-open
      :transition "slidedown"
      :duration "200ms"
      (box
        :class "power-options"
        :orientation "v"
        :spacing 5
        (button
          :onclick "systemctl poweroff"
          :class "power-button shutdown"
          :tooltip "Shutdown"
          "⏻")
        (button
          :onclick "systemctl reboot"
          :class "power-button restart"
          :tooltip "Restart"
          "")
        (button
          :onclick "hyprctl dispatch exit"
          :class "power-button logout"
          :tooltip "Logout"
          "󰍃")))))

;; Variables
(defvar power-menu-open false)

;; Polls
(defpoll time :interval "1s"
  "date '+%H:%M'")

(defpoll date :interval "1m"
  "date '+%b %d'")

(defpoll cpu-usage :interval "3s" 'scripts/system-info.sh cpu')
(defpoll ram-usage :interval "3s" 'scripts/system-info.sh ram')
(defpoll volume-icon :interval "1s" 'scripts/system-info.sh volume-icon')

(defpoll workspaces-data :interval "1s" 'scripts/hyprland-info.sh workspaces')
(defpoll active-workspace :interval "1s" 'scripts/hyprland-info.sh active-workspace')
(defpoll window-title :interval "50ms" 'scripts/hyprland-info.sh window-title')
(defpoll network-status :interval "5s" 'scripts/hyprland-info.sh network-status')
(defpoll network-icon :interval "5s" 'scripts/hyprland-info.sh network-icon')  


